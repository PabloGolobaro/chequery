// Code generated by go-swagger; DO NOT EDIT.

package order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/pablogolobaro/chequery/cmd/client/models"
)

// CreateOrderReader is a Reader for the CreateOrder structure.
type CreateOrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateOrderCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCreateOrderDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateOrderCreated creates a CreateOrderCreated with default headers values
func NewCreateOrderCreated() *CreateOrderCreated {
	return &CreateOrderCreated{}
}

/*
CreateOrderCreated describes a response with status code 201, with default header values.

List of created checks IDs
*/
type CreateOrderCreated struct {
	Payload *models.OrderCreateResponse
}

// IsSuccess returns true when this create order created response has a 2xx status code
func (o *CreateOrderCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create order created response has a 3xx status code
func (o *CreateOrderCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create order created response has a 4xx status code
func (o *CreateOrderCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create order created response has a 5xx status code
func (o *CreateOrderCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create order created response a status code equal to that given
func (o *CreateOrderCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create order created response
func (o *CreateOrderCreated) Code() int {
	return 201
}

func (o *CreateOrderCreated) Error() string {
	return fmt.Sprintf("[POST /order][%d] createOrderCreated  %+v", 201, o.Payload)
}

func (o *CreateOrderCreated) String() string {
	return fmt.Sprintf("[POST /order][%d] createOrderCreated  %+v", 201, o.Payload)
}

func (o *CreateOrderCreated) GetPayload() *models.OrderCreateResponse {
	return o.Payload
}

func (o *CreateOrderCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrderCreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrderDefault creates a CreateOrderDefault with default headers values
func NewCreateOrderDefault(code int) *CreateOrderDefault {
	return &CreateOrderDefault{
		_statusCode: code,
	}
}

/*
CreateOrderDefault describes a response with status code -1, with default header values.

Generic server error
*/
type CreateOrderDefault struct {
	_statusCode int

	Payload *CreateOrderDefaultBody
}

// IsSuccess returns true when this create order default response has a 2xx status code
func (o *CreateOrderDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create order default response has a 3xx status code
func (o *CreateOrderDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create order default response has a 4xx status code
func (o *CreateOrderDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create order default response has a 5xx status code
func (o *CreateOrderDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create order default response a status code equal to that given
func (o *CreateOrderDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create order default response
func (o *CreateOrderDefault) Code() int {
	return o._statusCode
}

func (o *CreateOrderDefault) Error() string {
	return fmt.Sprintf("[POST /order][%d] createOrder default  %+v", o._statusCode, o.Payload)
}

func (o *CreateOrderDefault) String() string {
	return fmt.Sprintf("[POST /order][%d] createOrder default  %+v", o._statusCode, o.Payload)
}

func (o *CreateOrderDefault) GetPayload() *CreateOrderDefaultBody {
	return o.Payload
}

func (o *CreateOrderDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateOrderDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateOrderDefaultBody create order default body
swagger:model CreateOrderDefaultBody
*/
type CreateOrderDefaultBody struct {

	// The error message
	// Example: Error loading file
	// Required: true
	Message *string `json:"Message"`
}

// Validate validates this create order default body
func (o *CreateOrderDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrderDefaultBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("createOrder default"+"."+"Message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create order default body based on context it is used
func (o *CreateOrderDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrderDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrderDefaultBody) UnmarshalBinary(b []byte) error {
	var res CreateOrderDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
