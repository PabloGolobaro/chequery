// Code generated by go-swagger; DO NOT EDIT.

package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pablogolobaro/chequery/cmd/client/models"
)

// LiveProbeReader is a Reader for the LiveProbe structure.
type LiveProbeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LiveProbeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLiveProbeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewLiveProbeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLiveProbeOK creates a LiveProbeOK with default headers values
func NewLiveProbeOK() *LiveProbeOK {
	return &LiveProbeOK{}
}

/*
LiveProbeOK describes a response with status code 200, with default header values.

Generic server live probe message
*/
type LiveProbeOK struct {
	Payload *models.LiveProbeResponse
}

// IsSuccess returns true when this live probe o k response has a 2xx status code
func (o *LiveProbeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this live probe o k response has a 3xx status code
func (o *LiveProbeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this live probe o k response has a 4xx status code
func (o *LiveProbeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this live probe o k response has a 5xx status code
func (o *LiveProbeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this live probe o k response a status code equal to that given
func (o *LiveProbeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the live probe o k response
func (o *LiveProbeOK) Code() int {
	return 200
}

func (o *LiveProbeOK) Error() string {
	return fmt.Sprintf("[GET /health-check][%d] liveProbeOK  %+v", 200, o.Payload)
}

func (o *LiveProbeOK) String() string {
	return fmt.Sprintf("[GET /health-check][%d] liveProbeOK  %+v", 200, o.Payload)
}

func (o *LiveProbeOK) GetPayload() *models.LiveProbeResponse {
	return o.Payload
}

func (o *LiveProbeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LiveProbeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLiveProbeInternalServerError creates a LiveProbeInternalServerError with default headers values
func NewLiveProbeInternalServerError() *LiveProbeInternalServerError {
	return &LiveProbeInternalServerError{}
}

/*
LiveProbeInternalServerError describes a response with status code 500, with default header values.

LiveProbeInternalServerError live probe internal server error
*/
type LiveProbeInternalServerError struct {
}

// IsSuccess returns true when this live probe internal server error response has a 2xx status code
func (o *LiveProbeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this live probe internal server error response has a 3xx status code
func (o *LiveProbeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this live probe internal server error response has a 4xx status code
func (o *LiveProbeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this live probe internal server error response has a 5xx status code
func (o *LiveProbeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this live probe internal server error response a status code equal to that given
func (o *LiveProbeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the live probe internal server error response
func (o *LiveProbeInternalServerError) Code() int {
	return 500
}

func (o *LiveProbeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /health-check][%d] liveProbeInternalServerError ", 500)
}

func (o *LiveProbeInternalServerError) String() string {
	return fmt.Sprintf("[GET /health-check][%d] liveProbeInternalServerError ", 500)
}

func (o *LiveProbeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
