// Code generated by go-swagger; DO NOT EDIT.

package check

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateChecksStatusReader is a Reader for the UpdateChecksStatus structure.
type UpdateChecksStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateChecksStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateChecksStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewUpdateChecksStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateChecksStatusOK creates a UpdateChecksStatusOK with default headers values
func NewUpdateChecksStatusOK() *UpdateChecksStatusOK {
	return &UpdateChecksStatusOK{}
}

/*
UpdateChecksStatusOK describes a response with status code 200, with default header values.

Just empty responce body
*/
type UpdateChecksStatusOK struct {
	Payload interface{}
}

// IsSuccess returns true when this update checks status o k response has a 2xx status code
func (o *UpdateChecksStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update checks status o k response has a 3xx status code
func (o *UpdateChecksStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update checks status o k response has a 4xx status code
func (o *UpdateChecksStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update checks status o k response has a 5xx status code
func (o *UpdateChecksStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update checks status o k response a status code equal to that given
func (o *UpdateChecksStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update checks status o k response
func (o *UpdateChecksStatusOK) Code() int {
	return 200
}

func (o *UpdateChecksStatusOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/check][%d] updateChecksStatusOK  %+v", 200, o.Payload)
}

func (o *UpdateChecksStatusOK) String() string {
	return fmt.Sprintf("[PUT /api/v1/check][%d] updateChecksStatusOK  %+v", 200, o.Payload)
}

func (o *UpdateChecksStatusOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateChecksStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateChecksStatusInternalServerError creates a UpdateChecksStatusInternalServerError with default headers values
func NewUpdateChecksStatusInternalServerError() *UpdateChecksStatusInternalServerError {
	return &UpdateChecksStatusInternalServerError{}
}

/*
UpdateChecksStatusInternalServerError describes a response with status code 500, with default header values.

Generic server error
*/
type UpdateChecksStatusInternalServerError struct {
	Payload *UpdateChecksStatusInternalServerErrorBody
}

// IsSuccess returns true when this update checks status internal server error response has a 2xx status code
func (o *UpdateChecksStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update checks status internal server error response has a 3xx status code
func (o *UpdateChecksStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update checks status internal server error response has a 4xx status code
func (o *UpdateChecksStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update checks status internal server error response has a 5xx status code
func (o *UpdateChecksStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update checks status internal server error response a status code equal to that given
func (o *UpdateChecksStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update checks status internal server error response
func (o *UpdateChecksStatusInternalServerError) Code() int {
	return 500
}

func (o *UpdateChecksStatusInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1/check][%d] updateChecksStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateChecksStatusInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v1/check][%d] updateChecksStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateChecksStatusInternalServerError) GetPayload() *UpdateChecksStatusInternalServerErrorBody {
	return o.Payload
}

func (o *UpdateChecksStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateChecksStatusInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
UpdateChecksStatusInternalServerErrorBody update checks status internal server error body
swagger:model UpdateChecksStatusInternalServerErrorBody
*/
type UpdateChecksStatusInternalServerErrorBody struct {

	// The error message
	// Example: Error loading file
	// Required: true
	Message *string `json:"Message"`
}

// Validate validates this update checks status internal server error body
func (o *UpdateChecksStatusInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateChecksStatusInternalServerErrorBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("updateChecksStatusInternalServerError"+"."+"Message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update checks status internal server error body based on context it is used
func (o *UpdateChecksStatusInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateChecksStatusInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateChecksStatusInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res UpdateChecksStatusInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
